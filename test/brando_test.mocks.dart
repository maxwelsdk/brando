// Mocks generated by Mockito 5.0.16 from annotations
// in brando/test/brando_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:brando/brando.dart' as _i2;
import 'package:brando/http/clients/dio_http_request_methods_impl.dart' as _i5;
import 'package:brando/http/enum/http_verbs.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'brando_test.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [Brando].
///
/// See the documentation for Mockito's code generation for more information.
class MockBrando extends _i1.Mock implements _i2.Brando {
  MockBrando() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<dynamic, dynamic> get headers =>
      (super.noSuchMethod(Invocation.getter(#headers),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  _i3.Future<dynamic> request(
          {_i4.HttpVerbs? httpVerbs,
          String? uri,
          dynamic body,
          Map<String, dynamic>? headers,
          Map<String, dynamic>? queryParameters}) =>
      (super.noSuchMethod(
          Invocation.method(#request, [], {
            #httpVerbs: httpVerbs,
            #uri: uri,
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters
          }),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DioHttpRequestMethodsImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioHttpRequestMethodsImpl extends _i1.Mock
    implements _i5.DioHttpRequestMethodsImpl {
  MockDioHttpRequestMethodsImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> delete({String? uri, Map<String, dynamic>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [], {#uri: uri, #headers: headers}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> get(
          {String? uri,
          Map<String, dynamic>? headers,
          Map<String, dynamic>? queryParameters}) =>
      (super.noSuchMethod(
          Invocation.method(#get, [], {
            #uri: uri,
            #headers: headers,
            #queryParameters: queryParameters
          }),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> post(
          {String? uri, Map<String, dynamic>? headers, dynamic body}) =>
      (super.noSuchMethod(
          Invocation.method(
              #post, [], {#uri: uri, #headers: headers, #body: body}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> put(
          {String? uri, Map<String, dynamic>? headers, dynamic body}) =>
      (super.noSuchMethod(
          Invocation.method(
              #put, [], {#uri: uri, #headers: headers, #body: body}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TokenMessage].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenMessage extends _i1.Mock implements _i6.TokenMessage {
  MockTokenMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getTokenByEvent(String? event) =>
      (super.noSuchMethod(Invocation.method(#getTokenByEvent, [event]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  String toString() => super.toString();
}
